{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8e340aa7",
   "metadata": {
    "papermill": {
     "duration": 0.003854,
     "end_time": "2025-05-30T15:56:22.027922",
     "exception": false,
     "start_time": "2025-05-30T15:56:22.024068",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/data-types-and-missing-values).**\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "235d3416",
   "metadata": {
    "papermill": {
     "duration": 0.002905,
     "end_time": "2025-05-30T15:56:22.034089",
     "exception": false,
     "start_time": "2025-05-30T15:56:22.031184",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Introduction\n",
    "\n",
    "Run the following cell to load your data and some utility functions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "544404e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:22.042035Z",
     "iopub.status.busy": "2025-05-30T15:56:22.041149Z",
     "iopub.status.idle": "2025-05-30T15:56:26.890807Z",
     "shell.execute_reply": "2025-05-30T15:56:26.889897Z"
    },
    "papermill": {
     "duration": 4.855126,
     "end_time": "2025-05-30T15:56:26.892288",
     "exception": false,
     "start_time": "2025-05-30T15:56:22.037162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setup complete.\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "reviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\", index_col=0)\n",
    "\n",
    "from learntools.core import binder; binder.bind(globals())\n",
    "from learntools.pandas.data_types_and_missing_data import *\n",
    "print(\"Setup complete.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f0931cf",
   "metadata": {
    "papermill": {
     "duration": 0.003062,
     "end_time": "2025-05-30T15:56:26.898713",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.895651",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Exercises"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04a46f32",
   "metadata": {
    "papermill": {
     "duration": 0.002781,
     "end_time": "2025-05-30T15:56:26.904595",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.901814",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. \n",
    "What is the data type of the `points` column in the dataset?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7f758db7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:26.912079Z",
     "iopub.status.busy": "2025-05-30T15:56:26.911442Z",
     "iopub.status.idle": "2025-05-30T15:56:26.919931Z",
     "shell.execute_reply": "2025-05-30T15:56:26.919029Z"
    },
    "papermill": {
     "duration": 0.013858,
     "end_time": "2025-05-30T15:56:26.921337",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.907479",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_PointsDtype\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your code here\n",
    "dtype = reviews.points.dtype\n",
    "\n",
    "# Check your answer\n",
    "q1.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ab1d2591",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:26.929342Z",
     "iopub.status.busy": "2025-05-30T15:56:26.929054Z",
     "iopub.status.idle": "2025-05-30T15:56:26.932717Z",
     "shell.execute_reply": "2025-05-30T15:56:26.932109Z"
    },
    "papermill": {
     "duration": 0.009132,
     "end_time": "2025-05-30T15:56:26.934067",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.924935",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#q1.hint()\n",
    "#q1.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "578f9ec8",
   "metadata": {
    "papermill": {
     "duration": 0.003171,
     "end_time": "2025-05-30T15:56:26.940713",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.937542",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. \n",
    "Create a Series from entries in the `points` column, but convert the entries to strings. Hint: strings are `str` in native Python."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0a970136",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:26.948541Z",
     "iopub.status.busy": "2025-05-30T15:56:26.948250Z",
     "iopub.status.idle": "2025-05-30T15:56:26.989840Z",
     "shell.execute_reply": "2025-05-30T15:56:26.989084Z"
    },
    "papermill": {
     "duration": 0.047328,
     "end_time": "2025-05-30T15:56:26.991395",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.944067",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"2_StrPoints\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "point_strings = reviews.points.astype('str')\n",
    "\n",
    "# Check your answer\n",
    "q2.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cd458e16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:26.999803Z",
     "iopub.status.busy": "2025-05-30T15:56:26.999535Z",
     "iopub.status.idle": "2025-05-30T15:56:27.003563Z",
     "shell.execute_reply": "2025-05-30T15:56:27.002663Z"
    },
    "papermill": {
     "duration": 0.009937,
     "end_time": "2025-05-30T15:56:27.005036",
     "exception": false,
     "start_time": "2025-05-30T15:56:26.995099",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#q2.hint()\n",
    "#q2.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5359c1a",
   "metadata": {
    "papermill": {
     "duration": 0.003343,
     "end_time": "2025-05-30T15:56:27.011956",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.008613",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.\n",
    "Sometimes the price column is null. How many reviews in the dataset are missing a price?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f2058da4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:27.020283Z",
     "iopub.status.busy": "2025-05-30T15:56:27.019623Z",
     "iopub.status.idle": "2025-05-30T15:56:27.027660Z",
     "shell.execute_reply": "2025-05-30T15:56:27.026788Z"
    },
    "papermill": {
     "duration": 0.013743,
     "end_time": "2025-05-30T15:56:27.029208",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.015465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"3_CountMissingPrices\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "n_missing_prices = pd.isnull(reviews.price).sum()\n",
    "\n",
    "# Check your answer\n",
    "q3.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7f3d88d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:27.038109Z",
     "iopub.status.busy": "2025-05-30T15:56:27.037788Z",
     "iopub.status.idle": "2025-05-30T15:56:27.041499Z",
     "shell.execute_reply": "2025-05-30T15:56:27.040700Z"
    },
    "papermill": {
     "duration": 0.009635,
     "end_time": "2025-05-30T15:56:27.042860",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.033225",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#q3.hint()\n",
    "#q3.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "68fa659f",
   "metadata": {
    "papermill": {
     "duration": 0.00367,
     "end_time": "2025-05-30T15:56:27.050362",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.046692",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4.\n",
    "What are the most common wine-producing regions? Create a Series counting the number of times each value occurs in the `region_1` field. This field is often missing data, so replace missing values with `Unknown`. Sort in descending order.  Your output should look something like this:\n",
    "\n",
    "```\n",
    "Unknown                    21247\n",
    "Napa Valley                 4480\n",
    "                           ...  \n",
    "Bardolino Superiore            1\n",
    "Primitivo del Tarantino        1\n",
    "Name: region_1, Length: 1230, dtype: int64\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "be818891",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:27.058821Z",
     "iopub.status.busy": "2025-05-30T15:56:27.058526Z",
     "iopub.status.idle": "2025-05-30T15:56:27.104618Z",
     "shell.execute_reply": "2025-05-30T15:56:27.103842Z"
    },
    "papermill": {
     "duration": 0.051701,
     "end_time": "2025-05-30T15:56:27.105819",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.054118",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.25, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"4_ReviewsPerRegion\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "reviews_per_region = reviews['region_1'].fillna('Unkown').value_counts()\n",
    "\n",
    "# Check your answer\n",
    "q4.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1955aadb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-30T15:56:27.115578Z",
     "iopub.status.busy": "2025-05-30T15:56:27.114928Z",
     "iopub.status.idle": "2025-05-30T15:56:27.118536Z",
     "shell.execute_reply": "2025-05-30T15:56:27.117803Z"
    },
    "papermill": {
     "duration": 0.009879,
     "end_time": "2025-05-30T15:56:27.120124",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.110245",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#q4.hint()\n",
    "#q4.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "608a5d1e",
   "metadata": {
    "papermill": {
     "duration": 0.003676,
     "end_time": "2025-05-30T15:56:27.128413",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.124737",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Keep going\n",
    "\n",
    "Move on to **[renaming and combining](https://www.kaggle.com/residentmario/renaming-and-combining)**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37baa2ed",
   "metadata": {
    "papermill": {
     "duration": 0.003582,
     "end_time": "2025-05-30T15:56:27.135825",
     "exception": false,
     "start_time": "2025-05-30T15:56:27.132243",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 655,
     "sourceId": 1252,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2321,
     "sourceId": 3919,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2894,
     "sourceId": 4877,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 3491,
     "sourceId": 5624,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 1442,
     "sourceId": 8172,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 9366,
     "sourceId": 13206,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 179555,
     "sourceId": 403916,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 4549,
     "sourceId": 466349,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2478,
     "sourceId": 1151655,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 10128,
     "sourceId": 5438389,
     "sourceType": "datasetVersion"
    }
   ],
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.234004,
   "end_time": "2025-05-30T15:56:27.658079",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-30T15:56:17.424075",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
